name: Create release, build and upload artifacts (Linux aarch64)

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
jobs:
  create-build-upload:
    name: Build, package and publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [aarch64]
    container:
      image: rust:latest
      env:
        PKG_CONFIG_ALLOW_CROSS: 1
        PKG_CONFIG_PATH: /usr/lib/${{ matrix.arch }}-linux-gnu/pkgconfig/:${PKG_CONFIG_PATH}
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        AR_aarch64_unknown_linux_gnu: aarch64-linux-gnu-ar
        CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
        CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++ 
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: aarch64-unknown-linux-gnu

      - name: Add arm64
        run: dpkg --add-architecture arm64 && apt update

      - name: Install dependencies
        run: apt install -y curl libgstreamer1.0-dev:arm64 g++-aarch64-linux-gnu libc6-dev-arm64-cross libglib2.0-dev:arm64 nodejs npm pkg-config:arm64 libssl-dev:arm64

      - name: npm install
        working-directory: qobuz-player-web
        run: npm install

      - name: Build styles
        working-directory: qobuz-player-web
        run: npm run build

      - name: Build player
        run:  cargo build --release --target aarch64-unknown-linux-gnu

      - name: Tar 
        run: tar -cvf qobuz-player-aarch64-unknown-linux-gnu.tar.gz -C ./target/aarch64-unknown-linux-gnu/release/ qobuz-player

      - name: Release 
        uses: softprops/action-gh-release@v1
        with:
          files: qobuz-player-aarch64-unknown-linux-gnu.tar.gz
